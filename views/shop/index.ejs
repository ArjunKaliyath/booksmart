<%- include('../includes/head.ejs') %>

  <link rel="stylesheet" href="/css/product.css" />
  </head>

  <body>
    <%- include('../includes/navigation.ejs') %>

      <main>
        <% if(prods.length> 0) { %>
          <div class="grid">
            <% for(let product of prods) { %>
              <article class="card product-item">
                <header class="card__header">
                  <h1 class="product__title">
                    <%= product.title %>
                  </h1>
                </header>
                <div class="card__image">
                  <img src="/<%= product.imageUrl %>" alt="<%= product.title %>" />
                </div>
                <div class="card__content">
                  <h2 class="product__price">$<%= product.price %>
                  </h2>
                  <p class="product__description">
                    <%= product.description %>
                  </p>
                </div>
                <div class="card__actions">
                  <a href="/products/<%= product._id %>" class="btn">Details</a>
                  <% if (isAuthenticated) { %>
                    <%- include('../includes/add-to-cart.ejs', { product: product }) %>
                      <% } %>
                </div>
              </article>
              <% } %>
          </div>
          <%- include('../includes/pagination.ejs') %>
            <% } else { %>
              <h1>No Products Found.</h1>
              <% } %>
      </main>

      <div id="chat-container">
        <h3>AI Chatbot</h3>
        <div id="messages"></div>
        <form id="chat-form">
          <input type="hidden" name="CSRFToken" value="<%=csrfToken%>">
          <input type="text" id="user-input" placeholder="Ask me anything..." />
          <button type="submit">Send</button>
        </form>
      </div>

      <script src="/js/main.js"></script>
      <script>
        const chatForm = document.getElementById('chat-form');
        const userInput = document.getElementById('user-input');
        const messagesContainer = document.getElementById('messages');

        // Event listener for form submission
        chatForm.addEventListener('submit', async (e) => {
          e.preventDefault(); // Prevent page refresh

          const message = userInput.value.trim();
          if (message === '') return; // Don't send empty messages

          // Display the user's message
          messagesContainer.innerHTML += `<div class="message user-message"><b>You:</b> ${message}</div>`;
          userInput.value = ''; // Clear the input field

          const csrfToken = chatForm.querySelector('input[name="CSRFToken"]').value;

          try {
            // Send message to the backend API
            const response = await fetch('/api/chat', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ message: message , CSRFToken: csrfToken }),
            });

            // Get the JSON response from the backend
            const data = await response.json();

            // Display the AI's response
            messagesContainer.innerHTML += `<div class="message ai-message"><b>Bot:</b> ${data.answer}</div>`;
            messagesContainer.scrollTop = messagesContainer.scrollHeight; // Scroll to bottom
          } catch (error) {
            console.error('Error with chatbot:', error);
            messagesContainer.innerHTML += `<div class="message error-message"><b>Bot:</b> Sorry, an error occurred.</div>`;
          }
        });
      </script>
  </body>

  </html>

  <style>
    #chat-container {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 300px;
      height: 400px;
      border: 1px solid #ccc;
      border-radius: 10px;
      background-color: #fff;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      display: flex;
      flex-direction: column;
      padding: 10px;
      z-index: 1000;
      font-family: sans-serif;
    }

    #messages {
      flex-grow: 1;
      overflow-y: auto;
      padding: 10px;
      border: 1px solid #eee;
      border-radius: 5px;
      margin-bottom: 10px;
    }

    .message {
      background-color: #f1f1f1;
      padding: 8px;
      margin-bottom: 5px;
      border-radius: 5px;
    }

    #chat-form {
      display: flex;
    }

    #user-input {
      flex-grow: 1;
      border: 1px solid #ccc;
      padding: 8px;
      border-radius: 5px;
    }

    #chat-form button {
      background-color: #007bff;
      color: #fff;
      border: none;
      padding: 8px 12px;
      border-radius: 5px;
      cursor: pointer;
    }
  </style>